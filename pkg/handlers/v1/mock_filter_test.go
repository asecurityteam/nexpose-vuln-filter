// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/domain/filter.go
package v1

import (
	reflect "reflect"

	nexpose "github.com/asecurityteam/nexpose-vuln-filter/pkg/domain/nexpose"
	gomock "github.com/golang/mock/gomock"
)

// MockVulnFilterer is a mock of VulnFilterer interface
type MockVulnFilterer struct {
	ctrl     *gomock.Controller
	recorder *MockVulnFiltererMockRecorder
}

// MockVulnFiltererMockRecorder is the mock recorder for MockVulnFilterer
type MockVulnFiltererMockRecorder struct {
	mock *MockVulnFilterer
}

// NewMockVulnFilterer creates a new mock instance
func NewMockVulnFilterer(ctrl *gomock.Controller) *MockVulnFilterer {
	mock := &MockVulnFilterer{ctrl: ctrl}
	mock.recorder = &MockVulnFiltererMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockVulnFilterer) EXPECT() *MockVulnFiltererMockRecorder {
	return m.recorder
}

// FilterVulnerabilities mocks base method
func (m *MockVulnFilterer) FilterVulnerabilities(arg0 []nexpose.AssetVulnerabilityDetails) []nexpose.AssetVulnerabilityDetails {
	ret := m.ctrl.Call(m, "FilterVulnerabilities", arg0)
	ret0, _ := ret[0].([]nexpose.AssetVulnerabilityDetails)
	return ret0
}

// FilterVulnerabilities indicates an expected call of FilterVulnerabilities
func (mr *MockVulnFiltererMockRecorder) FilterVulnerabilities(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FilterVulnerabilities", reflect.TypeOf((*MockVulnFilterer)(nil).FilterVulnerabilities), arg0)
}

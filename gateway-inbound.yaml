openapi: 3.0.0
x-runtime:
  httpserver:
    address: ":8080"
  logger:
    level: "INFO"
    output: "STDOUT"
  stats:
    output: "DATADOG"
    datadog:
      address: "statsd:8125"
      flushinterval: "10s"
  signals:
    installed:
      - "OS"
    os:
      signals:
        - 2 # SIGINT
        - 15 # SIGTERM
  connstate:
    reportinterval: "5s"
    hijackedcounter: "http.server.connstate.hijacked"
    closedcounter: "http.server.connstate.closed"
    idlegauge: "http.server.connstate.idle.gauge"
    idlecounter: "http.server.connstate.idle"
    activegauge: "http.server.connstate.active.gauge"
    activecounter: "http.server.connstate.active"
    newgauge: "http.server.connstate.new.gauge"
    newcounter: "http.server.connstate.new"
x-transportd:
  backends:
    - app
  app:
    host: "http://app:8081"
    pool:
      ttl: "24h"
      count: 1
info:
  version: 1.0.0
  title: "Nexpose Vulnerability Filter"
  description: "Nexpose Vulnerability Filter uses filters based on CVSS score and regular expressions to add or remove vulnerabilities from an asset for further processing by the pipeline."
  contact:
    name: Security Development
    email: secdev-external@atlassian.com
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
paths:
  /healthcheck:
    get:
      description: "Liveness check."
      responses:
        "200":
          description: "Success."
      x-transportd:
        backend: app
  /filter:
    post:
      description: Accepts a Nexpose asset payload with Nexpose vulnerabilities and returns the asset payload with a filtered list of vulnerabilities based on configuration.
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
<<<<<<< b97e0fa2831a44600b03848841be4a1f5525061d:api.yaml
                # an asset needs either a hostname OR an IP (or both)
                - $ref: '#/components/schemas/AssetVulnerabilitiesWithIP'
                - $ref: '#/components/schemas/AssetVulnerabilitiesWithHostname'
=======
                 # an asset needs either a hostname OR an IP (or both)
                 - $ref: '#/components/schemas/AssetVulnerabilitiesEventWithIP'
                 - $ref: '#/components/schemas/AssetVulnerabilitiesEventWithHostname'
>>>>>>> SECD-750 Produce to a stream in the Handler:gateway-inbound.yaml
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                anyOf:
                  # an asset needs either a hostname OR an IP (or both)
<<<<<<< b97e0fa2831a44600b03848841be4a1f5525061d:api.yaml
                  - $ref: '#/components/schemas/AssetVulnerabilitiesWithIP'
                  - $ref: '#/components/schemas/AssetVulnerabilitiesWithHostname'
=======
                  - $ref: '#/components/schemas/AssetVulnerabilitiesEventWithIP'
                  - $ref: '#/components/schemas/AssetVulnerabilitiesEventWithHostname'
>>>>>>> SECD-750 Produce to a stream in the Handler:gateway-inbound.yaml
      x-transportd:
        backend: app
        enabled:
          - "metrics"
          - "accesslog"
          - "requestvalidation"
          - "responsevalidation"
          - "lambda"
        lambda:
          arn: "filter"
          async: false
          request: '#! json .Request.Body !#'
          success: '{"status": 200, "bodyPassthrough": true}'
          error: '{"status": 500, "bodyPassthrough": true}'
components:
  schemas:
<<<<<<< b97e0fa2831a44600b03848841be4a1f5525061d:api.yaml
    AssetVulnerabilitiesWithIP:
=======
    AssetVulnerabilitiesEventWithIP:
>>>>>>> SECD-750 Produce to a stream in the Handler:gateway-inbound.yaml
      type: object
      required:
        - id
        - ip
        - lastScanned
        - assetVulnerabilityDetails
      properties:
        id:
          type: integer
          format: int64
          example: 282
          description: The identifier of the asset.
        ip:
          type: string
          example: 182.34.74.202
          description: The primary IPv4 or IPv6 address of the asset.
        lastScanned:
          type: string
          format: date-time
          description: The last time the asset was scanned.
        assetVulnerabilityDetails:
          type: array
          description: List of vulnerabilities found on the asset.
          items:
            $ref: '#/components/schemas/AssetVulnerabilityDetails'
<<<<<<< b97e0fa2831a44600b03848841be4a1f5525061d:api.yaml
    AssetVulnerabilitiesWithHostname:
=======
    AssetVulnerabilitiesEventWithHostname:
>>>>>>> SECD-750 Produce to a stream in the Handler:gateway-inbound.yaml
      type: object
      required:
        - id
        - hostname
        - lastScanned
        - assetVulnerabilityDetails
      properties:
<<<<<<< b97e0fa2831a44600b03848841be4a1f5525061d:api.yaml
        hostname:
          type: string
          example: corporate-workstation-1102DC.acme.com
          description: The primary host name (local or FQDN) of the asset.
=======
>>>>>>> SECD-750 Produce to a stream in the Handler:gateway-inbound.yaml
        id:
          type: integer
          format: int64
          example: 282
          description: The identifier of the asset.
<<<<<<< b97e0fa2831a44600b03848841be4a1f5525061d:api.yaml
        ip:
          type: string
          example: 182.34.74.202
          description: The primary IPv4 or IPv6 address of the asset.
=======
        hostname:
          type: string
          example: corporate-workstation-1102DC.acme.com
          description: The primary host name (local or FQDN) of the asset.
>>>>>>> SECD-750 Produce to a stream in the Handler:gateway-inbound.yaml
        lastScanned:
          type: string
          format: date-time
          description: The last time the asset was scanned.
        assetVulnerabilityDetails:
          type: array
          description: List of vulnerabilities found on the asset.
          items:
            $ref: '#/components/schemas/AssetVulnerabilityDetails'
    AssetVulnerabilityDetails:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          example: ssh-openssh-x11uselocalhost-x11-forwarding-session-hijack
          description: The identifier of the vulnerability.
        results:
          type: array
          description: >-
            The vulnerability check results for the finding. Multiple instances
            may be present if one or more checks fired, or a check has multiple
            independent results.
          items:
            $ref: '#/components/schemas/AssessmentResult'
        cvssV2Score:
          type: number
          format: double
          example: 4.4
          description: 'The CVSS V2 score, which ranges from 0-10.'
        cvssV2Severity:
          type: string
          example: Severe
          description: >-
            The severity of the vulnerability, one of: `"Moderate"`, `"Severe"`,
            `"Critical"`.
        description:
          type: string
          example: >-
            <p>A remote code execution vulnerability exists in the way that the
            scripting engine handles objects in memory in Microsoft Edge. ...</p>
          description: The description of the vulnerability.
        title:
          type: string
          example: >-
            Microsoft CVE-2017-11804: Scripting Engine Memory Corruption
            Vulnerability
          description: The title (summary) of the vulnerability.
        solutions:
          type: array
          items:
            type: string
          description: Solutions for remediation of the vulnerability.
    AssessmentResult:
      type: object
      required:
        - port
        - protocol
      properties:
        port:
          type: integer
          format: int32
          example: 22
          description: The port of the service the result was discovered on.
        protocol:
          type: string
          example: tcp
          description: The protocol of the service the result was discovered on.
          enum:
            - ip
            - icmp
            - igmp
            - ggp
            - tcp
            - pup
            - udp
            - idp
            - esp
            - nd
            - raw
